[{"C:\\MeuProjetoEmReact\\my-app\\src\\index.js":"1","C:\\MeuProjetoEmReact\\my-app\\src\\app.js":"2","C:\\MeuProjetoEmReact\\my-app\\src\\App.js":"3","C:\\MeuProjetoEmReact\\my-app\\src\\Tmdb.js":"4","C:\\MeuProjetoEmReact\\my-app\\src\\components\\MovieRow.js":"5","C:\\MeuProjetoEmReact\\my-app\\src\\components\\FeaturedMovie.js":"6","C:\\MeuProjetoEmReact\\my-app\\src\\components\\Header.jsx":"7"},{"size":199,"mtime":1607452313748,"results":"8","hashOfConfig":"9"},{"size":45,"mtime":1607452353761,"results":"10","hashOfConfig":"9"},{"size":1765,"mtime":1607519525897,"results":"11","hashOfConfig":"9"},{"size":2402,"mtime":1607462937000,"results":"12","hashOfConfig":"9"},{"size":654,"mtime":1607460511076,"results":"13","hashOfConfig":"9"},{"size":1679,"mtime":1607470024372,"results":"14","hashOfConfig":"9"},{"size":657,"mtime":1607519411304,"results":"15","hashOfConfig":"9"},{"filePath":"16","messages":"17","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"18"},"ixidsc",{"filePath":"19","messages":"20","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"21","messages":"22","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"23"},{"filePath":"24","messages":"25","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"26"},{"filePath":"27","messages":"28","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"29"},{"filePath":"30","messages":"31","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"32"},{"filePath":"33","messages":"34","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"C:\\MeuProjetoEmReact\\my-app\\src\\index.js",[],["35","36"],"C:\\MeuProjetoEmReact\\my-app\\src\\app.js",["37"],"C:\\MeuProjetoEmReact\\my-app\\src\\App.js",["38","39","40","41","42"],"import React, { useEffect, useState } from \"react\";\r\nimport \"./App.css\";\r\nimport Tmdb from \"./Tmdb\";\r\nimport MovieRow from \"./components/MovieRow.js\";\r\nimport FeaturedMovie from \"./components/FeaturedMovie.js\";\r\nimport Header from \"./components/Header.jsx\";\r\n\r\nexport default () => {\r\n  const [movieList, setMovieList] = useState([]);\r\n  const [featureData, setFeatureData] = useState(null);\r\n  const [blackHeader, setBlackHeader] = useState(false);\r\n\r\n  useEffect(() => {\r\n\r\n    const loadAll = async () => {\r\n      //Pega lista total\r\n      let list = await Tmdb.getHomeList();\r\n      setMovieList(list);\r\n\r\n      // Pegando o filme em destaque ( Feature )\r\n      let originals = list.filter((i) => i.slug === \"originals\");\r\n\r\n      let randomChosen = Math.floor(\r\n\r\n        Math.random() * (originals[0].items.results.length - 1)\r\n\r\n      );\r\n\r\n      let chosen = originals[0].items.results[randomChosen];\r\n\r\n      let chosenInfo = await Tmdb.getMovieInfo(chosen.id, \"tv\");\r\n\r\n      setFeatureData(chosenInfo);\r\n    };\r\n\r\n    loadAll();\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n\r\n    const scrollListenener = () => {\r\n      if (window.scrollY > 10) {\r\n        setBlackHeader(true);\r\n      } else {\r\n        setBlackHeader(false);\r\n      }\r\n    };\r\n\r\n    window.addEventListener(\"scroll\", scrollListenener);\r\n    return () => {\r\n      window.removeEventListener(\"scroll\", scrollListenener);\r\n    };\r\n\r\n  }, []);\r\n\r\n\r\n  return (\r\n\r\n    <div className=\"page\">\r\n\r\n      <Header black={blackHeader} />\r\n\r\n      {featureData && <FeaturedMovie item={featureData} />}\r\n\r\n      <section className=\"lists\">\r\n\r\n        {movieList.map((item, key) => (\r\n          <MovieRow key={key} title={item.title} items={item.items} />\r\n        ))}\r\n\r\n      </section>\r\n    </div>\r\n  );\r\n};\r\n","C:\\MeuProjetoEmReact\\my-app\\src\\Tmdb.js",["43"],"const API_KEY = \"38c007f28d5b66f36b9c3cf8d8452a4b\";\r\nconst API_BASE = \"https://api.themoviedb.org/3\";\r\n\r\nconst basicFetch = async (endpoint) => {\r\n  const req = await fetch(`${API_BASE}${endpoint}`);\r\n  const json = await req.json();\r\n  return json;\r\n};\r\n\r\nexport default {\r\n  getHomeList: async () => {\r\n    return [\r\n      {\r\n        slug: \"originals\",\r\n        title: \"Originais da Netflix\",\r\n        items: await basicFetch(\r\n          `/discover/tv?with_network=213&language=pt-BR&api_key=${API_KEY}`\r\n        ),\r\n      },\r\n      {\r\n        slug: \"trending\",\r\n        title: \"Recomendados para você\",\r\n        items: await basicFetch(\r\n          `/trending/all/week?language=pt-BR&api_key=${API_KEY}`\r\n        ),\r\n      },\r\n      {\r\n        slug: \"toprated\",\r\n        title: \"Em alta\",\r\n        items: await basicFetch(\r\n          `/movie/top_rated?language=pt-BR&api_key=${API_KEY}`\r\n        ),\r\n      },\r\n      {\r\n        slug: \"action\",\r\n        title: \"Ação\",\r\n        items: await basicFetch(\r\n          `/discover/movie?with_genres=28&language=pt-BR&api_key=${API_KEY}`\r\n        ),\r\n      },\r\n      {\r\n        slug: \"comedy\",\r\n        title: \"Comédia\",\r\n        items: await basicFetch(\r\n          `/discover/movie?with_genres=35&language=pt-BR&api_key=${API_KEY}`\r\n        ),\r\n      },\r\n      {\r\n        slug: \"horror\",\r\n        title: \"Terror\",\r\n        items: await basicFetch(\r\n          `/discover/movie?with_genres=27&language=pt-BR&api_key=${API_KEY}`\r\n        ),\r\n      },\r\n      {\r\n        slug: \"romance\",\r\n        title: \"Romance\",\r\n        items: await basicFetch(\r\n          `/discover/movie?with_genres=10749&language=pt-BR&api_key=${API_KEY}`\r\n        ),\r\n      },\r\n      {\r\n        slug: \"documentary\",\r\n        title: \"Documentários\",\r\n        items: await basicFetch(\r\n          `/discover/movie?with_genres=99&language=pt-BR&api_key=${API_KEY}`\r\n        ),\r\n      },\r\n    ];\r\n  },\r\n  getMovieInfo: async (movieID, type) => {\r\n    let info = {};\r\n\r\n    if (movieID) {\r\n      switch (type) {\r\n        case \"movie\":\r\n        info = await basicFetch(`/movie/${movieID}?language=pt-BR&api_key=${API_KEY}`);\r\n        break;\r\n          \r\n        case \"tv\":\r\n        info = await basicFetch(`/tv/${movieID}?language=pt-BR&api_key=${API_KEY}`);\r\n        break;\r\n          \r\n        default:\r\n        info = null;\r\n        break;\r\n      }\r\n    }\r\n\r\n    return info;\r\n  },\r\n};\r\n","C:\\MeuProjetoEmReact\\my-app\\src\\components\\MovieRow.js",["44"],"import React from \"react\";\r\nimport \"./MovieRow.css\";\r\n\r\nexport default ({ title, items }) => {\r\n  return (\r\n      <div className=\"movieRow\">\r\n      <h2>{title}</h2>\r\n      <div className=\"movieRow--listarea\">\r\n        <div className=\"movieRow--list\">\r\n          {items.results.length > 0 &&\r\n            items.results.map((item, key) => (\r\n              <div key={key} className=\"movieRow--item\">\r\n                <img\r\n                  src={`https://image.tmdb.org/t/p/w300${item.poster_path}`}\r\n                  alt={item.original_title}\r\n                />\r\n              </div>\r\n            ))}\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n","C:\\MeuProjetoEmReact\\my-app\\src\\components\\FeaturedMovie.js",["45"],"import React from 'react';\r\nimport './FeaturedMovie.css';\r\n\r\n\r\nexport default ({item}) => {\r\n    console.log(item)\r\n\r\n    let firstDate = new Date(item.first_air_date)\r\n    let genres = [];\r\n    for (let i in item.genres) {\r\n        genres.push(item.genres[i].name)\r\n    }\r\n    return (\r\n        <section className=\"featured\" style ={{\r\n            backgroundSize: 'cover',\r\n            backgroundPosition: 'center',\r\n            backgroundImage: `url(https://image.tmdb.org/t/p/original${item.backdrop_path})`\r\n        }}>\r\n            <div className=\"featured--vertical\">\r\n                <div className=\"featured--horizontal\">\r\n                    <div className=\"featured--name\">{item.original_name}</div>\r\n                    <div className=\"featured--info\">\r\n                        <div className=\"featured--points\">{item.vote_average} pontos</div>\r\n                        <div className=\"featured--year\">{firstDate.getFullYear()}</div>\r\n                        <div className=\"featured--seasons\">{item.number_of_seasons} temporada{item.number_of_seasons !== 1 ? 's' : ''}</div>\r\n                    </div>\r\n                    <div className=\"featured--description\">{item.overview}</div>\r\n                    <div className=\"featured--buttons\">\r\n                        <a className=\"featured--watchButton\" href={`/watch/${item.id}`}>▶ Assistir</a>\r\n                        <a className=\"featured--mylistButton\" href={`/list/add/${item.id}`}>+ Minha Lista</a>\r\n                    </div>\r\n                    <div className=\"featured--genres\"><strong>Gêneros: </strong>{genres.join(', ')}</div>\r\n                </div>\r\n           </div>\r\n        </section>\r\n    )\r\n}","C:\\MeuProjetoEmReact\\my-app\\src\\components\\Header.jsx",["46"],{"ruleId":"47","replacedBy":"48"},{"ruleId":"49","replacedBy":"50"},{"ruleId":"51","severity":1,"message":"52","line":1,"column":8,"nodeType":"53","messageId":"54","endLine":1,"endColumn":13},{"ruleId":"55","severity":1,"message":"56","line":8,"column":1,"nodeType":"57","endLine":74,"endColumn":3},{"ruleId":"58","severity":1,"message":"59","line":43,"column":9,"nodeType":"53","messageId":"60","endLine":43,"endColumn":23},{"ruleId":"61","severity":1,"message":"62","line":43,"column":27,"nodeType":"63","endLine":43,"endColumn":31},{"ruleId":"58","severity":1,"message":"59","line":45,"column":9,"nodeType":"53","messageId":"60","endLine":45,"endColumn":23},{"ruleId":"51","severity":1,"message":"64","line":45,"column":9,"nodeType":"53","messageId":"54","endLine":45,"endColumn":23},{"ruleId":"55","severity":1,"message":"65","line":10,"column":1,"nodeType":"57","endLine":92,"endColumn":3},{"ruleId":"55","severity":1,"message":"56","line":4,"column":1,"nodeType":"57","endLine":23,"endColumn":3},{"ruleId":"55","severity":1,"message":"56","line":5,"column":1,"nodeType":"57","endLine":37,"endColumn":2},{"ruleId":"55","severity":1,"message":"56","line":4,"column":1,"nodeType":"57","endLine":19,"endColumn":2},"no-native-reassign",["66"],"no-negated-in-lhs",["67"],"no-unused-vars","'React' is defined but never used.","Identifier","unusedVar","import/no-anonymous-default-export","Assign arrow function to a variable before exporting as module default","ExportDefaultDeclaration","no-const-assign","'setBlackHeader' is constant.","const","react-hooks/exhaustive-deps","Assignments to the 'setBlackHeader' variable from inside React Hook useEffect will be lost after each render. To preserve the value over time, store it in a useRef Hook and keep the mutable value in the '.current' property. Otherwise, you can move this variable directly inside useEffect.","Literal","'setBlackHeader' is assigned a value but never used.","Assign object to a variable before exporting as module default","no-global-assign","no-unsafe-negation"]